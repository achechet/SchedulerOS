; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\demo_subfunc.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\demo_subfunc.d --cpu=SC000 --bi --apcs=interwork -O0 -I.\INC -I.\API -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Device\ARM\ARMSC000\Include --omf_browse=.\obj\demo_subfunc.crf SRC\DEMO_SubFunc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  openSend60 PROC
;;;37     ****************************************************************************/
;;;38     void openSend60(void)
000000  4848              LDR      r0,|L1.292|
;;;39     {
;;;40     	DEMO_SET_BIT(SCIS60CON, 0);
000002  69c0              LDR      r0,[r0,#0x1c]
000004  2101              MOVS     r1,#1
000006  4308              ORRS     r0,r0,r1
000008  4946              LDR      r1,|L1.292|
00000a  61c8              STR      r0,[r1,#0x1c]
;;;41     }
00000c  4770              BX       lr
;;;42     
                          ENDP

                  closeSend60 PROC
;;;50     ****************************************************************************/
;;;51     void closeSend60(void)
00000e  4845              LDR      r0,|L1.292|
;;;52     {
;;;53     	DEMO_CLR_BIT(SCIS60CON, 0);
000010  69c0              LDR      r0,[r0,#0x1c]
000012  0840              LSRS     r0,r0,#1
000014  0040              LSLS     r0,r0,#1
000016  4943              LDR      r1,|L1.292|
000018  61c8              STR      r0,[r1,#0x1c]
;;;54     	while (SCISSR & (1<<5));
00001a  bf00              NOP      
                  |L1.28|
00001c  4841              LDR      r0,|L1.292|
00001e  6880              LDR      r0,[r0,#8]
000020  2120              MOVS     r1,#0x20
000022  4208              TST      r0,r1
000024  d1fa              BNE      |L1.28|
;;;55     }
000026  4770              BX       lr
;;;56     
                          ENDP

                  DemoCos_DelayNETU PROC
;;;64     ****************************************************************************/
;;;65     void DemoCos_DelayNETU(unsigned int nETU)
000028  e00c              B        |L1.68|
                  |L1.42|
;;;66     {
;;;67     	while(nETU)
;;;68     	{
;;;69         	SCISSR |= BIT6;/* Begin 1ETU counter */
00002a  493e              LDR      r1,|L1.292|
00002c  6889              LDR      r1,[r1,#8]
00002e  2240              MOVS     r2,#0x40
000030  4311              ORRS     r1,r1,r2
000032  4a3c              LDR      r2,|L1.292|
000034  6091              STR      r1,[r2,#8]
;;;70         	while((SCISSR & BIT6) != 0)
000036  bf00              NOP      
                  |L1.56|
000038  493a              LDR      r1,|L1.292|
00003a  6889              LDR      r1,[r1,#8]
00003c  2240              MOVS     r2,#0x40
00003e  4211              TST      r1,r2
000040  d1fa              BNE      |L1.56|
;;;71         	{
;;;72     			;
;;;73         	}
;;;74     		nETU--;
000042  1e40              SUBS     r0,r0,#1
                  |L1.68|
000044  2800              CMP      r0,#0                 ;67
000046  d1f0              BNE      |L1.42|
;;;75     	}
;;;76     }
000048  4770              BX       lr
;;;77     /*************************************************
                          ENDP

                  DEMOCOS_PPS PROC
;;;84     *************************************************/ 
;;;85     void DEMOCOS_PPS(void)
00004a  b5f8              PUSH     {r3-r7,lr}
;;;86     {
;;;87     	
;;;88     	register INT32U len,pck;
;;;89     	register INT32U i;
;;;90         INT8U  PPSFailRES[3] = {0xFF,0x00,0xFF};
00004c  a036              ADR      r0,|L1.296|
00004e  6800              LDR      r0,[r0,#0]
000050  9000              STR      r0,[sp,#0]
;;;91         
;;;92     
;;;93     	PPS_PPSS = 0xff;
000052  20ff              MOVS     r0,#0xff
000054  4935              LDR      r1,|L1.300|
000056  7008              STRB     r0,[r1,#0]
;;;94     	len = 1; 
000058  2601              MOVS     r6,#1
;;;95         HED_T0_ReceiveNBytesRam(G_APDUBuf+1,1);
00005a  2101              MOVS     r1,#1
00005c  4833              LDR      r0,|L1.300|
00005e  1c40              ADDS     r0,r0,#1
000060  f7fffffe          BL       HED_T0_ReceiveNBytesRam
;;;96     	for (i = 4; i<7; i++)
000064  2404              MOVS     r4,#4
000066  e007              B        |L1.120|
                  |L1.104|
;;;97     	{
;;;98     		if (((PPS_PPS0 >> i) & 1) == 1)
000068  4830              LDR      r0,|L1.300|
00006a  7840              LDRB     r0,[r0,#1]  ; G_APDUBuf
00006c  4120              ASRS     r0,r0,r4
00006e  07c0              LSLS     r0,r0,#31
000070  0fc0              LSRS     r0,r0,#31
000072  d000              BEQ      |L1.118|
;;;99     			len++;
000074  1c76              ADDS     r6,r6,#1
                  |L1.118|
000076  1c64              ADDS     r4,r4,#1              ;96
                  |L1.120|
000078  2c07              CMP      r4,#7                 ;96
00007a  d3f5              BCC      |L1.104|
;;;100    	}
;;;101    	
;;;102    	HED_T0_ReceiveNBytesRam(G_APDUBuf+2,len);
00007c  4631              MOV      r1,r6
00007e  482b              LDR      r0,|L1.300|
000080  1c80              ADDS     r0,r0,#2
000082  f7fffffe          BL       HED_T0_ReceiveNBytesRam
;;;103    
;;;104    	/*get PCK */
;;;105    	pck = 0x00;
000086  2500              MOVS     r5,#0
;;;106    	for (i = 0; i<(len+2); i++)
000088  2400              MOVS     r4,#0
00008a  e003              B        |L1.148|
                  |L1.140|
;;;107    	{
;;;108    		pck = pck ^ G_APDUBuf[i];
00008c  4827              LDR      r0,|L1.300|
00008e  5d00              LDRB     r0,[r0,r4]
000090  4045              EORS     r5,r5,r0
000092  1c64              ADDS     r4,r4,#1              ;106
                  |L1.148|
000094  1cb0              ADDS     r0,r6,#2              ;106
000096  4284              CMP      r4,r0                 ;106
000098  d3f8              BCC      |L1.140|
;;;109    	}
;;;110    	if (pck == 0)
00009a  2d00              CMP      r5,#0
00009c  d138              BNE      |L1.272|
;;;111    	{
;;;112    		DemoCos_DelayNETU(4);
00009e  2004              MOVS     r0,#4
0000a0  f7fffffe          BL       DemoCos_DelayNETU
;;;113    		if ((PPS_PPS0 & 0x9F) == 0x10) 
0000a4  4821              LDR      r0,|L1.300|
0000a6  7840              LDRB     r0,[r0,#1]  ; G_APDUBuf
0000a8  219f              MOVS     r1,#0x9f
0000aa  4008              ANDS     r0,r0,r1
0000ac  2810              CMP      r0,#0x10
0000ae  d121              BNE      |L1.244|
;;;114    		{		
;;;115    			/* find FD */
;;;116    			for (i = 0; i < PPS_NUM; i++)
0000b0  2400              MOVS     r4,#0
0000b2  e01d              B        |L1.240|
                  |L1.180|
;;;117    			{
;;;118    				if (PPS_PPS1 == FD_table[i][0])
0000b4  481d              LDR      r0,|L1.300|
0000b6  7881              LDRB     r1,[r0,#2]  ; G_APDUBuf
0000b8  2006              MOVS     r0,#6
0000ba  4360              MULS     r0,r4,r0
0000bc  4a1c              LDR      r2,|L1.304|
0000be  5a10              LDRH     r0,[r2,r0]
0000c0  4281              CMP      r1,r0
0000c2  d114              BNE      |L1.238|
;;;119    				{
;;;120    					/* send pps response */
;;;121    					PPS_PPS0 = 0x10;
0000c4  2010              MOVS     r0,#0x10
0000c6  4919              LDR      r1,|L1.300|
0000c8  7048              STRB     r0,[r1,#1]
;;;122    					PPS_PPS2 = FD_table[i][2];
0000ca  2006              MOVS     r0,#6
0000cc  4360              MULS     r0,r4,r0
0000ce  4611              MOV      r1,r2
0000d0  1840              ADDS     r0,r0,r1
0000d2  7940              LDRB     r0,[r0,#5]
0000d4  4915              LDR      r1,|L1.300|
0000d6  70c8              STRB     r0,[r1,#3]
;;;123    					HED_T0_SendNBytes(G_APDUBuf,4);
0000d8  2104              MOVS     r1,#4
0000da  4814              LDR      r0,|L1.300|
0000dc  f7fffffe          BL       HED_T0_SendNBytes
;;;124    					SCITA1 = FD_table[i][0];	
0000e0  2006              MOVS     r0,#6
0000e2  4360              MULS     r0,r4,r0
0000e4  4912              LDR      r1,|L1.304|
0000e6  5a08              LDRH     r0,[r1,r0]
0000e8  490e              LDR      r1,|L1.292|
0000ea  6188              STR      r0,[r1,#0x18]
                  |L1.236|
;;;125    					return;
;;;126    				}
;;;127    			}
;;;128    		}
;;;129    		/* send pps err response */
;;;130            HED_T0_SendNBytes(&PPSFailRES[0],1);
;;;131            HED_T0_SendNBytes(&PPSFailRES[1],1);
;;;132            HED_T0_SendNBytes(&PPSFailRES[2],1);
;;;133    	}
;;;134    	else
;;;135    	{
;;;136    		/*means pps pck is err ,do nothing */
;;;137    	}
;;;138    }
0000ec  bdf8              POP      {r3-r7,pc}
                  |L1.238|
0000ee  1c64              ADDS     r4,r4,#1              ;116
                  |L1.240|
0000f0  2c05              CMP      r4,#5                 ;116
0000f2  d3df              BCC      |L1.180|
                  |L1.244|
0000f4  2101              MOVS     r1,#1                 ;130
0000f6  4668              MOV      r0,sp                 ;130
0000f8  f7fffffe          BL       HED_T0_SendNBytes
0000fc  2101              MOVS     r1,#1                 ;131
0000fe  a800              ADD      r0,sp,#0              ;131
000100  3001              ADDS     r0,#1                 ;131
000102  f7fffffe          BL       HED_T0_SendNBytes
000106  2101              MOVS     r1,#1                 ;132
000108  a800              ADD      r0,sp,#0              ;132
00010a  3002              ADDS     r0,#2                 ;132
00010c  f7fffffe          BL       HED_T0_SendNBytes
                  |L1.272|
000110  bf00              NOP      
000112  e7eb              B        |L1.236|
;;;139    /****************************************************************************
                          ENDP

                  DemoCos_SendINS PROC
;;;146    ****************************************************************************/
;;;147    void DemoCos_SendINS(unsigned char ins)
000114  b501              PUSH     {r0,lr}
;;;148    {
;;;149    	HED_T0_SendNBytes(&ins,1);//send INS
000116  2101              MOVS     r1,#1
000118  a800              ADD      r0,sp,#0
00011a  3003              ADDS     r0,#3
00011c  f7fffffe          BL       HED_T0_SendNBytes
;;;150    }
000120  bd08              POP      {r3,pc}
                          ENDP

000122  0000              DCW      0x0000
                  |L1.292|
                          DCD      0x40001000
                  |L1.296|
000128  ff00              DCB      255,0
00012a  ff00              DCB      255,0
                  |L1.300|
                          DCD      G_APDUBuf
                  |L1.304|
                          DCD      FD_table

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  FD_table
000000  00970007          DCW      0x0097,0x0007
000004  00780011          DCW      0x0078,0x0011
000008  017300fe          DCW      0x0173,0x00fe
00000c  0018001e          DCW      0x0018,0x001e
000010  00f70094          DCW      0x00f7,0x0094
000014  003f007b          DCW      0x003f,0x007b
000018  0096000f          DCW      0x0096,0x000f
00001c  0079              DCW      0x0079
